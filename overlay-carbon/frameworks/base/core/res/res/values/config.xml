<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2017, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- The component name for the default system attention service.
         This service must be trusted, as it can be activated without explicit consent of the user.
         See android.attention.AttentionManagerService.
    -->
    <string name="config_defaultAttentionService" translatable="false">com.google.android.as/com.google.android.apps.miphone.aiai.attention.service.AiAiAttentionService</string>

    <!-- Live Captions provided by Google's Device Personalization Service package  -->
    <string name="config_defaultSystemCaptionsManagerService">com.google.android.as/com.google.android.apps.miphone.aiai.captions.SystemCaptionsManagerService</string>
    <string name="config_defaultSystemCaptionsService">com.google.android.as/com.google.android.apps.miphone.aiai.captions.CaptionsService</string>

    <!-- Recents text and image selection for Pixel Launcher (not supported by Launcher3) -->
    <string name="config_defaultContentSuggestionsService" translatable="false">com.google.android.as/com.google.android.apps.miphone.aiai.app.AiAiContentSuggestionsService</string>

    <!-- Exempt AiAi from privacy indicators -->
    <string name="config_systemAmbientAudioIntelligence">com.google.android.as</string>
    <string name="config_systemAudioIntelligence">com.google.android.as</string>
    <string name="config_systemNotificationIntelligence">com.google.android.as</string>
    <string name="config_systemTextIntelligence">com.google.android.as</string>
    <string name="config_systemUiIntelligence">com.google.android.as</string>
    <string name="config_systemVisualIntelligence">com.google.android.as</string>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:

         // Device has a color adjustable battery light.
         LIGHTS_RGB_NOTIFICATION_LED = 1

         // Device has a color adjustable notification light.
         LIGHTS_RGB_BATTERY_LED = 2

         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)

         // The notification light has adjustable pulsing capability.
         LIGHTS_PULSATING_LED = 8

         // Device has a multi-segment battery light that is able to
         // use the light brightness value to determine how many
         // segments to show (in order to represent battery level).
         LIGHTS_SEGMENTED_BATTERY_LED = 16

         // The notification light supports HAL adjustable brightness
         // via the alpha channel.
         // Note: if a device notification light supports LIGHTS_RGB_NOTIFICATION_LED
         // then HAL support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32

         // Device has a battery light.
         LIGHTS_BATTERY_LED = 64

         // The battery light supports HAL adjustable brightness via
         // the alpha channel.
         // Note: if a device battery light supports LIGHTS_RGB_BATTERY_LED then HAL
         // support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_BATTERY_LED_BRIGHTNESS = 128

         For example, a device with notification and battery lights that supports
         pulsating and RGB control would set this config to 75. -->
    <integer name="config_deviceLightCapabilities">75</integer>

    <!-- Whether the device supports Smart Pixels -->
    <bool name="config_enableSmartPixels">true</bool>

</resources>
